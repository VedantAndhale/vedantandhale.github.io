{"/":{"title":"Vedant Andhale","content":"\n- I am Vedant Andhale, an who just falled in love of python and data while learning web development and now trying to be Pythonist.\n- And this is a collection of my notes, resources and just about everything I do everyday.\n\n\n#### Skills I have in my Portfolio currently\n- Python Programming\n\n#### Content Playbook\n- [Today I Learned](notes/Today%20I%20Learned)\n    \u003eHere you find all my notes\n- [Resource Repositories](notes/Resource%20Repositories)\n    \u003eHere you find all the resources which I find along my way on internet \n- [Article Repositories](notes/Article%20Repositories.md)\n    \u003eHere you find all the snippets/summary of blogs  i like\n- [Tweet Scroll](notes/Tweet%20Scroll.md)\n    \u003eHere you find all the amazing tweets i like. \n\nFind all Content below:\n* [By Tags](tags)\n\nOtherwise, you can simply [Search](https://vedantandhale.github.io/#navigation) (`cmd/ctrl+k`) for terms and content.\n\n#### Connect with me\n- Twitter - https://twitter.com/Vedantpr0\n- LinkedIn - https://www.linkedin.com/in/VedantAndhale \n- GitHub - https://github.com/VedantAndhale\n","lastmodified":"2023-02-21T11:12:48.456684395Z","tags":null},"/notes/Article-Repositories":{"title":"Article Repositories","content":"","lastmodified":"2023-02-21T11:12:48.456684395Z","tags":null},"/notes/Resource-Repositories":{"title":"Resource Repositories","content":"\n","lastmodified":"2023-02-21T11:12:48.456684395Z","tags":null},"/notes/Today-I-Learned":{"title":"Today I Learned","content":"\n\nA Common Table Expression (CTE) is a temporary named result set that you can reference within a SELECT, INSERT, UPDATE, or DELETE statement. The CTE can also be used in a View.\n\n```sql\nWITH cte_query AS\n(SELECT â€¦ subquery ...)\nSELECT main query ... FROM/JOIN with cte_query ...\n```\n\n## Types: Recursive and Non-Recursive\n### Non-Recursive CTE\nThere are two types of CTEs: Recursive and Non-Recursive.\n\nThe non-recursive are simple where CTE is used to avoid SQL duplication by referencing a name instead of the actual SQL statement.\n\nE.g.\n```sql\nWITH avg_per_store AS\n  (SELECT store, AVG(amount) AS average_order\n   FROM orders\n   GROUP BY store)\nSELECT o.id, o.store, o.amount, avg.average_order AS avg_for_store\nFROM orders o\nJOIN avg_per_store avg\nON o.store = avg.store;\n```\n\n### Recursive CTE\n\nRecursive CTEs use repeated procedural loops therefore the recursion. The recursive query calls itself until the query satisfied the condition. In a recursive CTE, we should provide a where condition to terminate the recursion.\n\nA recursive CTE is useful in querying hierarchical data such as organization charts where one employee reports to a manager or multi-level bill of materials when a product consists of many components, and each component itself also consists of many other components.\n\n```sql\nWITH levels AS (\n  SELECT\n    id,\n    first_name,\n    last_name,\n    superior_id,\n    1 AS level\n  FROM employees\n  WHERE superior_id IS NULL\n  UNION ALL\n  SELECT\n    employees.id,\n    employees.first_name,\n    employees.last_name,\n    employees.superior_id,\n    levels.level + 1\n  FROM employees, levels\n  WHERE employees.superior_id = levels.id\n)\n \nSELECT *\nFROM levels;\n```\n\nSee more on[5 Practical SQL CTE Examples | LearnSQL.com](https://learnsql.com/blog/practical-sql-cte-examples/).","lastmodified":"2023-02-21T11:12:48.456684395Z","tags":null},"/notes/Tweet-Scroll":{"title":"Tweet Scroll","content":"\n\nhrjkflerk;t #theme\nhioerjfk #tutorial\nfgiuskj #theme","lastmodified":"2023-02-21T11:12:48.456684395Z","tags":null}}